# Playwright/Patchright + CDP + noVNC - Production Ready for Daytona
# Built on Ubuntu 22.04 for better compatibility and performance

# Version and metadata
ARG TARGETPLATFORM=linux/amd64
ARG VERSION_TAG=1.0.0
ARG BUILD_DATE

FROM --platform=$TARGETPLATFORM ubuntu:22.04
LABEL org.opencontainers.image.title="Playwright/Patchright CDP + noVNC Container"
LABEL org.opencontainers.image.description="Production-ready container with Playwright, Patchright, Chrome CDP, and noVNC"
LABEL org.opencontainers.image.version="${VERSION_TAG}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.vendor="CDP Docker Solutions"
LABEL daytona.compatible="true"
LABEL daytona.version="${VERSION_TAG}"

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    TZ=UTC

# Environment variables for display and services
ENV DISPLAY=:99 \
    SCREEN_WIDTH=1920 \
    SCREEN_HEIGHT=1080 \
    SCREEN_DEPTH=24 \
    VNC_PORT=5901 \
    NOVNC_PORT=6080 \
    CDP_PORT=9222 \
    HTTP_PORT=8000 \
    PUBLIC_URL="" \
    EXTERNAL_HOST="" \
    DAYTONA_SANDBOX_ID=""

# Set workspace directory
ENV WORKSPACE_DIR=/workspace
WORKDIR $WORKSPACE_DIR

# Install all system dependencies in one layer for efficiency
RUN apt-get update && apt-get install -y \
    apt-utils \
    wget curl unzip git sudo nano vim \
    python3 python3-pip python3-venv \
    xvfb x11vnc fluxbox fonts-liberation fonts-noto-color-emoji \
    libnss3 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libdrm2 libgbm1 \
    libxcomposite1 libxdamage1 libxrandr2 libxfixes3 libatk1.0-0 libcups2 \
    libdbus-1-3 dbus libatspi2.0-0 libxkbcommon0 libepoxy0 libxcb-xinerama0 \
    supervisor htop procps psmisc ca-certificates gnupg lsb-release \
    build-essential netcat-openbsd telnet \
    && rm -rf /var/lib/apt/lists/*

# Remove conflicting Node.js and npm packages before installing from NodeSource
RUN apt-get remove -y nodejs npm libnode-dev || true

# Install latest Node.js LTS (20.x)
RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
    && apt-get install -y nodejs

# Install noVNC (latest version)
RUN git clone --depth 1 https://github.com/novnc/noVNC.git /opt/novnc \
    && git clone --depth 1 https://github.com/novnc/websockify.git /opt/novnc/utils/websockify \
    && chmod +x /opt/novnc/utils/websockify/run \
    && ln -s /opt/novnc/vnc.html /opt/novnc/index.html

# Create Python virtual environment and install Python packages
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt /tmp/requirements.txt
RUN pip install --upgrade pip setuptools wheel \
    && pip install -r /tmp/requirements.txt \
    && rm /tmp/requirements.txt

# Install Playwright and Patchright browsers (optimized for faster build)
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
RUN pip install playwright patchright \
    && playwright install-deps \
    && playwright install chromium \
    && patchright install chromium \
    && python -c "from playwright.sync_api import sync_playwright; print('Playwright installation verified')" \
    && python -c "from patchright.sync_api import sync_playwright; print('Patchright installation verified')"

# Create playwright user first (this will create the home directory automatically)
RUN useradd -m -s /bin/bash playwright \
    && usermod -aG sudo playwright \
    && echo "playwright ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create necessary directories and set permissions
RUN mkdir -p \
    $WORKSPACE_DIR \
    /var/log/supervisor \
    /tmp/chrome-profile \
    /tmp/chromium-profile \
    && chown -R playwright:playwright /home/playwright $WORKSPACE_DIR /ms-playwright /var/log/supervisor \
    && chmod 755 /home/playwright

# Copy application files
COPY --chown=playwright:playwright server.py /app/
COPY --chown=playwright:playwright browser_api/ /app/browser_api/
COPY --chown=playwright:playwright workspace_init.sh /app/
COPY --chown=playwright:playwright workspace/ $WORKSPACE_DIR/

# Copy supervisor configuration files
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create startup script and health check script
COPY startup.sh /usr/local/bin/startup.sh
COPY healthcheck.sh /usr/local/bin/healthcheck.sh

RUN chmod +x /usr/local/bin/startup.sh /usr/local/bin/healthcheck.sh

# Set proper permissions
RUN chown -R playwright:playwright /opt/venv /ms-playwright /tmp/chrome-profile /tmp/chromium-profile \
    && chmod -R 755 /opt/novnc

# Switch to playwright user
USER playwright

# Expose all service ports
EXPOSE $VNC_PORT $NOVNC_PORT $CDP_PORT $HTTP_PORT 9223

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Set entrypoint and default command
# ENTRYPOINT handles container initialization, CMD provides default arguments
ENTRYPOINT ["/usr/local/bin/startup.sh"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
